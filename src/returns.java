
import DTO.CustomerPaymentDTO;
import DTO.SupplierPaymentDTO;
import Dao.PaymentReturnsDao;
import Dao.CustomerPaymentsDao;
import Dao.SearchDao;
import Dao.SupplierPaymentsDao;
import Models.CustomerPaymentReturned;
import Models.SupplierPaymentReturned;
import java.sql.SQLException;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user
 */
public class returns extends javax.swing.JFrame {

    CustomerPaymentDTO paymentOrderDetails = new CustomerPaymentDTO();
    CustomerPaymentsDao customerPayment = new CustomerPaymentsDao();
    PaymentReturnsDao customerReturns = new PaymentReturnsDao();
    SupplierPaymentDTO SupplyPaymentsDetails = new SupplierPaymentDTO();
    SupplierPaymentsDao supplierPayment = new SupplierPaymentsDao();

    /**
     * Creates new form returns
     */
    public returns() {
        initComponents();
        loadOrderDetails();

        generateId();
        loadCustomerPaymentReturnedDetails();
        generateSupplyId();
        loadSupplyDetails();
        getSupplierNameBySupplyId();
        loadSupplierPaymentReturnedDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox2 = new javax.swing.JCheckBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        ReturnNo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CustomerReturnAmount = new javax.swing.JTextField();
        CustomerReturnedDate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Customer = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        OrderNoCombo = new javax.swing.JComboBox<>();
        ReturnId = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        ReturnedQuantity = new javax.swing.JTextField();
        PaymentAlreadyReceived = new java.awt.Checkbox();
        receivable = new java.awt.Checkbox();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        customerpaymentreturnedtable = new javax.swing.JTable();
        payableserchbutton1 = new javax.swing.JButton();
        payableserchField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        SupplierPaymentReturnAmount = new javax.swing.JTextField();
        SupplierReturnedDate = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        Supplyreturnid = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        SupplierName = new javax.swing.JTextField();
        SupplyId = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Quantity = new javax.swing.JTextField();
        PaymentPaid = new java.awt.Checkbox();
        Payable = new java.awt.Checkbox();
        jPanel6 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        supplierpaymentreturntab = new javax.swing.JTable();
        payableserchbutton2 = new javax.swing.JButton();
        payableserchField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jCheckBox2.setText("jCheckBox2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Order No");

        jLabel2.setText("Net Amount (Rs)");

        jLabel3.setText("Returned Date");

        CustomerReturnAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerReturnAmountActionPerformed(evt);
            }
        });

        jLabel4.setText("Return No");

        jLabel6.setText("Customer Name");

        Customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerActionPerformed(evt);
            }
        });

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        OrderNoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        OrderNoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderNoComboActionPerformed(evt);
            }
        });

        jLabel11.setText("Returned Quantity");

        ReturnedQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnedQuantityActionPerformed(evt);
            }
        });

        PaymentAlreadyReceived.setLabel("Payment Alreay Received");

        receivable.setLabel("Payment Receivable");

        javax.swing.GroupLayout ReturnNoLayout = new javax.swing.GroupLayout(ReturnNo);
        ReturnNo.setLayout(ReturnNoLayout);
        ReturnNoLayout.setHorizontalGroup(
            ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReturnNoLayout.createSequentialGroup()
                .addGroup(ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReturnNoLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addGroup(ReturnNoLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(399, 399, 399)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(ReturnId, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(ReturnNoLayout.createSequentialGroup()
                                    .addGap(133, 133, 133)
                                    .addComponent(OrderNoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReturnNoLayout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ReturnedQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton2)
                                        .addComponent(CustomerReturnedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Customer, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(CustomerReturnAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(ReturnNoLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(receivable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PaymentAlreadyReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        ReturnNoLayout.setVerticalGroup(
            ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReturnNoLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(OrderNoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReturnId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(receivable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PaymentAlreadyReceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReturnNoLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReturnNoLayout.createSequentialGroup()
                        .addComponent(Customer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(CustomerReturnAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(CustomerReturnedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ReturnNoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnedQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Add a Payment Return", ReturnNo);

        customerpaymentreturnedtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order No", "Customer ID", "Customer Name", "Company Name", "Returned Amount (Rs)", "Returned Date", "Quantity"
            }
        ));
        jScrollPane4.setViewportView(customerpaymentreturnedtable);

        payableserchbutton1.setText("Search Order No");
        payableserchbutton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payableserchbutton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(payableserchbutton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(payableserchField1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payableserchbutton1)
                    .addComponent(payableserchField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 739, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 327, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(40, Short.MAX_VALUE)))
        );

        jTabbedPane2.addTab("View of Payment Return", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Customer Returns", jPanel1);

        jLabel7.setText("Supply Id");

        jLabel8.setText("Net Amount (Rs)");

        jLabel9.setText("Returned Date");

        jLabel10.setText("Return No");

        jLabel12.setText("Supplier Name");

        SupplyId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        SupplyId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupplyIdActionPerformed(evt);
            }
        });

        jButton3.setText("Submit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Returned Quantity");

        PaymentPaid.setLabel("Payment paid");

        Payable.setLabel("Payable");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(jButton3))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                                        .addComponent(SupplierPaymentReturnAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(SupplyId, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(SupplierReturnedDate, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                            .addComponent(Quantity)))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(SupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(102, 102, 102)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Supplyreturnid, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PaymentPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Payable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(168, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(Supplyreturnid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SupplyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PaymentPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(Payable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(SupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(SupplierPaymentReturnAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(SupplierReturnedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 739, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 331, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane3.addTab("Add a Payment Return", jPanel5);

        supplierpaymentreturntab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supply No", "Supplier ID", "Supplier Name", "Returned amount", "Returned Date", "Quantity"
            }
        ));
        jScrollPane5.setViewportView(supplierpaymentreturntab);

        payableserchbutton2.setText("Search Order No");
        payableserchbutton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payableserchbutton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(payableserchbutton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(payableserchField2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payableserchbutton2)
                    .addComponent(payableserchField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 739, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 331, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane3.addTab("View of Payment Return", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        jTabbedPane1.addTab("Supplier Returns", jPanel2);

        jButton1.setText("BACK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        boolean validatednull = true;
        boolean validated = true;
        int paymentpaid = 0;
        int paymentpayable = 0;

        if (SupplierPaymentReturnAmount.getText().equals("") || SupplierReturnedDate.getDate() == null||Quantity.getText().equals("")) {

            validatednull = false;
            JOptionPane.showMessageDialog(this, "Please fill up all the Fields ");

        }

        if (validatednull == true) {
            String supplyId = (String) SupplyId.getSelectedItem();
            String supplierReturnId = Supplyreturnid.getText();
            Date supplierPaymentReturnedDate = SupplierReturnedDate.getDate();
            String supplierReturnAmount = SupplierPaymentReturnAmount.getText();
            String quantity = Quantity.getText();
            Date date = new Date();

            if ((supplierReturnAmount.matches("[0-9]+") == false)) {
                JOptionPane.showMessageDialog(this, "Amount cannot be includede letters");
                validated = false;
            }

            if (supplierReturnAmount.length() > 15) {
                validated = false;
                JOptionPane.showMessageDialog(this, "Maximum length exceeds allows less than 15 characters");
            }
            if (-1 != supplierReturnAmount.indexOf(" ")) {
                JOptionPane.showMessageDialog(this, "Amount cannot have spaces");
                validated = false;
            }

            if (!date.after(supplierPaymentReturnedDate)) {
                JOptionPane.showMessageDialog(this, "Payment returned date is not valid");
                validated = false;
            }
            
            if ((quantity.matches("[0-9]+") == false)) {
                JOptionPane.showMessageDialog(this, "Returned quantity cannot be includede letters");
                validated = false;
            }

            if (-1 != quantity.indexOf(" ")) {
                JOptionPane.showMessageDialog(this, "Returned quantity cannot have spaces");
                validated = false;
            }
            
            
            if (validated == true) {
                
             Boolean result = PaymentPaid.getState();
                if (result == true) {
                    paymentpaid = 1;

                } else {
                    paymentpayable = 1;
                }

                SupplierPaymentReturned s_paymentReturn = new SupplierPaymentReturned();
                s_paymentReturn.setSupplyId(supplyId);
                s_paymentReturn.setPaymentReturnedId(supplierReturnId);
                s_paymentReturn.setReturnedAmount(Double.parseDouble(supplierReturnAmount));
                s_paymentReturn.setReturnedDate(supplierPaymentReturnedDate);
                s_paymentReturn.setQuantity(Integer.parseInt(quantity));
                s_paymentReturn.setPaymentPayable(paymentpayable);
                s_paymentReturn.setPaymentPaid(paymentpaid);

                try {
                    boolean res = customerReturns.AddSupplierpaymentReturn(s_paymentReturn);
                    if (res == true) {
                        JOptionPane.showMessageDialog(this, " Supplier Payment return added sucessfully");
                        ClearFields();
                        loadSupplyDetails();
                        generateId();
                        loadSupplierPaymentReturnedDetails();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error occur in adding Supplier Payment return");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Employeedetails.class.getName()).log(Level.SEVERE, null, ex);

                }

            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void ReturnedQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnedQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ReturnedQuantityActionPerformed

    private void OrderNoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderNoComboActionPerformed
        getCustomerNameByOrderId();
        IsPaymentReceived();
        // TODO add your handling code here:
    }//GEN-LAST:event_OrderNoComboActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean validatednull = true;
        boolean validated = true;
        int paymentreceived = 0;
        int paymentreceivable = 0;

        if (CustomerReturnAmount.getText().equals("") || CustomerReturnedDate.getDate() == null || ReturnedQuantity.getText().equals("")) {

            validatednull = false;
            JOptionPane.showMessageDialog(this, "Please fill up all the Fields ");

        }

        if (validatednull == true) {
            String orderId = (String) OrderNoCombo.getSelectedItem();
            String customerReturnId = ReturnId.getText();
            Date customerPaymentReturnedDate = CustomerReturnedDate.getDate();
            String customerReturnAmount = CustomerReturnAmount.getText();
            String quantity = ReturnedQuantity.getText();

            Date date = new Date();

            if ((customerReturnAmount.matches("[0-9]+") == false)) {
                JOptionPane.showMessageDialog(this, "Amount cannot be includede letters");
                validated = false;
            }

            if (customerReturnAmount.length() > 15) {
                validated = false;
                JOptionPane.showMessageDialog(this, "Maximum length exceeds allows less than 15 characters");
            }
            if (-1 != customerReturnAmount.indexOf(" ")) {
                JOptionPane.showMessageDialog(this, "Amount cannot have spaces");
                validated = false;
            }

            if (!date.after(customerPaymentReturnedDate)) {
                JOptionPane.showMessageDialog(this, "Payment returned date is not valid");
                validated = false;
            }
            if ((quantity.matches("[0-9]+") == false)) {
                JOptionPane.showMessageDialog(this, "Returned quantity cannot be includede letters");
                validated = false;
            }

            if (-1 != quantity.indexOf(" ")) {
                JOptionPane.showMessageDialog(this, "Returned quantity cannot have spaces");
                validated = false;
            }

            if (validated == true) {
                Boolean result = PaymentAlreadyReceived.getState();
                if (result == true) {
                    paymentreceived = 1;

                } else {
                    paymentreceivable = 1;
                }
                CustomerPaymentReturned c_paymentReturn = new CustomerPaymentReturned();
                c_paymentReturn.setOrderId(orderId);
                c_paymentReturn.setPaymentReturnedId(customerReturnId);
                c_paymentReturn.setReturnedAmount(Double.parseDouble(customerReturnAmount));
                c_paymentReturn.setReturnedDate(date);
                c_paymentReturn.setPaymentReceivable(paymentreceivable);
                c_paymentReturn.setPaymentReceived(paymentreceived);
                c_paymentReturn.setReturnedQuantity(Integer.parseInt(quantity));

                try {
                    boolean res = customerReturns.AddCustomerpaymentReturn(c_paymentReturn);
                    if (res == true) {
                        JOptionPane.showMessageDialog(this, "Payment return added sucessfully");
                        ClearFields();
                        loadOrderDetails();
                        generateId();
                        loadCustomerPaymentReturnedDetails();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error occur in adding Payment return");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Employeedetails.class.getName()).log(Level.SEVERE, null, ex);

                }

            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void CustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerActionPerformed

    private void CustomerReturnAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerReturnAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerReturnAmountActionPerformed

    private void SupplyIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupplyIdActionPerformed
        IsPaymentPaid();
        getSupplierNameBySupplyId();
        // TODO add your handling code here:
    }//GEN-LAST:event_SupplyIdActionPerformed

    private void payableserchbutton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payableserchbutton1ActionPerformed
String SearchId = payableserchField1.getText();
 SearchDao empDetailSearchDao = new SearchDao();
      
        List<List<String>> res = empDetailSearchDao.SearchCustomerPaymentReturnedbyOrderId(SearchId);
        addRowToJTableHold(res);
        // TODO add your handling code here:
    }//GEN-LAST:event_payableserchbutton1ActionPerformed

    private void payableserchbutton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payableserchbutton2ActionPerformed
      String SearchId = payableserchbutton2.getText();
 SearchDao empDetailSearchDao = new SearchDao();
      
        List<List<String>> res = empDetailSearchDao.SearchSupplierPaymentReturnedBySupplyId(SearchId);
        addRowToJTableSupplierPaymentReturn(res);  // TODO add your handling code here:
    }//GEN-LAST:event_payableserchbutton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(returns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(returns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(returns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(returns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new returns().setVisible(true);
            }
        });
    }

    public void loadOrderDetails() {

        paymentOrderDetails = customerPayment.getOrderDetails();

        DefaultComboBoxModel orderIdModel = new DefaultComboBoxModel(paymentOrderDetails.orderIds.toArray());
        OrderNoCombo.setModel(orderIdModel);
    }

    public void getCustomerNameByOrderId() {

        String orderId = (String) OrderNoCombo.getSelectedItem();
        String customerNameToBeSet = FindCustomerNameByOrderId(orderId);

        Customer.setText(customerNameToBeSet);

    }

    public String FindCustomerNameByOrderId(String searchId) {
        String Name = "";
        for (int i = 0; i < paymentOrderDetails.OrderDetails.size(); i++) {
            List a = (List) paymentOrderDetails.OrderDetails.get(i);
            String id = a.get(0).toString();
            if (searchId.equals(id)) {
                Name = a.get(1).toString();
            }
        }
        return Name;
    }

    public void generateId() {
        String crid = customerReturns.nextPaymentReturnId();
        ReturnId.setText(crid);
    }

    public void loadSupplyDetails() {

        SupplyPaymentsDetails = supplierPayment.getSupplyDetails();

        DefaultComboBoxModel supplierIdModel = new DefaultComboBoxModel(SupplyPaymentsDetails.supplyIds.toArray());
        SupplyId.setModel(supplierIdModel);
    }

    public void getSupplierNameBySupplyId() {

        String supplyId = (String) SupplyId.getSelectedItem();
        String supplierNameToBeSet = FindSupplierNameBySupplyId(supplyId);

        SupplierName.setText(supplierNameToBeSet);

    }

    public String FindSupplierNameBySupplyId(String searchId) {
        String Name = "";
        for (int i = 0; i < SupplyPaymentsDetails.supplyDetails.size(); i++) {
            List a = (List) SupplyPaymentsDetails.supplyDetails.get(i);
            String id = a.get(0).toString();
            if (searchId.equals(id)) {
                Name = a.get(1).toString();
            }
        }
        return Name;
    }

    public void generateSupplyId() {
        String id = customerReturns.nextSupplierPaymentReturnId();
        Supplyreturnid.setText(id);
    }

    public void IsPaymentReceived() {
        String orderId = (String) OrderNoCombo.getSelectedItem();
        boolean isPaymentReceived = customerReturns.isPaymentReceived(orderId);

        if (isPaymentReceived) {
            receivable.setState(false);
            PaymentAlreadyReceived.setState(true);
        } else {
            PaymentAlreadyReceived.setState(false);
            receivable.setState(true);
        }
    }

    public void IsPaymentPaid() {
        String supplyId = (String) SupplyId.getSelectedItem();
        boolean isPaymentPaid = customerReturns.isPaymentReceivable(supplyId);

        if (isPaymentPaid) {
            Payable.setState(false);
            PaymentPaid.setState(true);
        } else {
            PaymentPaid.setState(false);
            Payable.setState(true);
        }
    }

    public void ClearFields() {
        OrderNoCombo.setSelectedItem(1);
        ReturnId.setText(null);
        CustomerReturnedDate.setDate(null);
        CustomerReturnAmount.setText(null);
        loadOrderDetails();
        generateId();
    }

    public void loadCustomerPaymentReturnedDetails() {

        List<List<String>> res = customerReturns.ViewCustomerPaymentReturned();
        addRowToJTableHold(res);
    }

    public void addRowToJTableHold(List res) {
        customerpaymentreturnedtable.setShowGrid(true);
        DefaultTableModel model = (DefaultTableModel) customerpaymentreturnedtable.getModel();
        model.setRowCount(0);
        Object rowData[] = new Object[7];
        for (Iterator it = res.iterator(); it.hasNext();) {
            List<String> innerList = (List<String>) it.next();
            rowData[0] = innerList.get(0);
            rowData[1] = innerList.get(1);
            rowData[2] = innerList.get(2);
            rowData[3] = innerList.get(3);
            rowData[4] = innerList.get(4);
            rowData[5] = innerList.get(5);
            rowData[6] = innerList.get(6);

            model.addRow(rowData);

        }
    }
    
    public void loadSupplierPaymentReturnedDetails() {

        List<List<String>> res = customerReturns.ViewSupplierPaymentReturned();
        addRowToJTableSupplierPaymentReturn(res);
    }

    public void addRowToJTableSupplierPaymentReturn(List res) {
        supplierpaymentreturntab.setShowGrid(true);
        DefaultTableModel model = (DefaultTableModel) supplierpaymentreturntab.getModel();
        model.setRowCount(0);
        Object rowData[] = new Object[6];
        for (Iterator it = res.iterator(); it.hasNext();) {
            List<String> innerList = (List<String>) it.next();
            rowData[0] = innerList.get(0);
            rowData[1] = innerList.get(1);
            rowData[2] = innerList.get(2);
            rowData[3] = innerList.get(3);
            rowData[4] = innerList.get(4);
            rowData[5] = innerList.get(5);
           
            model.addRow(rowData);

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Customer;
    private javax.swing.JTextField CustomerReturnAmount;
    private com.toedter.calendar.JDateChooser CustomerReturnedDate;
    private javax.swing.JComboBox<String> OrderNoCombo;
    private java.awt.Checkbox Payable;
    private java.awt.Checkbox PaymentAlreadyReceived;
    private java.awt.Checkbox PaymentPaid;
    private javax.swing.JTextField Quantity;
    private javax.swing.JTextField ReturnId;
    private javax.swing.JPanel ReturnNo;
    private javax.swing.JTextField ReturnedQuantity;
    private javax.swing.JTextField SupplierName;
    private javax.swing.JTextField SupplierPaymentReturnAmount;
    private com.toedter.calendar.JDateChooser SupplierReturnedDate;
    private javax.swing.JComboBox<String> SupplyId;
    private javax.swing.JTextField Supplyreturnid;
    private javax.swing.JTable customerpaymentreturnedtable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField payableserchField1;
    private javax.swing.JTextField payableserchField2;
    private javax.swing.JButton payableserchbutton1;
    private javax.swing.JButton payableserchbutton2;
    private java.awt.Checkbox receivable;
    private javax.swing.JTable supplierpaymentreturntab;
    // End of variables declaration//GEN-END:variables
}
