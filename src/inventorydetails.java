
import DTO.InventoryAddViewDTO;
import DTO.InventoryDetailsDTO;
import DTO.SupplierDetailsDTO;
import Dao.EmployeeDetailsDao;
import Dao.InventoryDetailsDao;
import Dao.SearchDao;
import Models.EmployeeDetails;
import Models.ItemDetails;
import Models.SupplierDetails;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user
 */
public class inventorydetails extends javax.swing.JFrame {

    InventoryDetailsDTO inventory = new InventoryDetailsDTO();
    InventoryDetailsDao inventoryDetails = new InventoryDetailsDao();
    SearchDao search = new SearchDao();
    String selectedRadio = "";

    /**
     * Creates new form inventorydetails
     */
    public inventorydetails() {
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setBounds(0, 0, screenSize.width, screenSize.height);
        MakeFieldsNoteditable();
        getInventoryDetails();
        generateId();
        loadInventoryDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        jTextField116 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jTextField1 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel131 = new javax.swing.JLabel();
        jTextField117 = new javax.swing.JTextField();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jButton9 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jTextField114 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        backButton = new javax.swing.JButton();
        addanewitem = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        itemIDfield = new javax.swing.JTextField();
        itemnameField = new javax.swing.JTextField();
        categoryIDField = new javax.swing.JTextField();
        quantityField = new javax.swing.JTextField();
        unitpriceField = new javax.swing.JTextField();
        netamountField = new javax.swing.JTextField();
        date = new com.toedter.calendar.JDateChooser();
        supplierIDCombo = new javax.swing.JComboBox<>();
        suppliernameCombo = new javax.swing.JComboBox<>();
        resetButton = new javax.swing.JButton();
        SubmitButtonadd = new javax.swing.JButton();
        categoryNameTextField = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        inventoryIdField = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        quantityField2 = new javax.swing.JTextField();
        unitpriceField2 = new javax.swing.JTextField();
        netamountField2 = new javax.swing.JTextField();
        date2 = new com.toedter.calendar.JDateChooser();
        supplierIDCombo2 = new javax.swing.JComboBox<>();
        suppliernameCombo2 = new javax.swing.JComboBox<>();
        resetButton2 = new javax.swing.JButton();
        cancelButton2 = new javax.swing.JButton();
        categoryIdCombo = new javax.swing.JComboBox<>();
        categoryNameCombo = new javax.swing.JComboBox<>();
        itemid = new javax.swing.JTextField();
        itemname = new javax.swing.JTextField();
        inventoryIdField1 = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        inventorytable = new javax.swing.JTable();
        searchRadiobutton = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        SupIDRadiobutton = new javax.swing.JRadioButton();
        itemIDRadiobutton = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        quantityField1 = new javax.swing.JTextField();
        unitpriceField1 = new javax.swing.JTextField();
        netamountField1 = new javax.swing.JTextField();
        date1 = new com.toedter.calendar.JDateChooser();
        supplierIDCombo1 = new javax.swing.JComboBox<>();
        suppliernameCombo1 = new javax.swing.JComboBox<>();
        resetButton1 = new javax.swing.JButton();
        SubmitButton = new javax.swing.JButton();
        updateItemIdCombo = new javax.swing.JComboBox<>();
        updateItemNameCombo = new javax.swing.JComboBox<>();
        updateCateogryIdCombo = new javax.swing.JComboBox<>();
        updateCategoryNameCombo = new javax.swing.JComboBox<>();
        inventoryIdField2 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel8.setText("Category ID");

        jLabel20.setText("Category Name");

        jLabel21.setText("Item ID");

        jLabel22.setText("Item Name");

        jLabel23.setText("Quantity");

        jLabel24.setText("Unit Price (Rs)");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Air Conditioning-Inverter Type", "Air Conditioning-Window Type", "Bolts & Nuts", "Brackets", "Brass Pad Lock-Long Shackle", "Brass Pad Lock-Short Shackle", "Door Locks-Full Handle", "Door Locks-On Rose", "Door Locks-Plate Handle", "Hardware Tools", "Nails", "Plumbing" }));

        jLabel3.setText("Net Amount (Rs)");

        jLabel1.setText("Date");

        jLabel129.setText("Supplier ID");

        jTextField116.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField116ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23)
                    .addComponent(jLabel22)
                    .addComponent(jLabel21)
                    .addComponent(jLabel20)
                    .addComponent(jLabel1)
                    .addComponent(jLabel129))
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField15)
                    .addComponent(jTextField16)
                    .addComponent(jTextField19)
                    .addComponent(jTextField7)
                    .addComponent(jComboBox4, 0, 239, Short.MAX_VALUE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField116)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addGap(18, 18, 18))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel129)
                    .addComponent(jTextField116, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        jButton11.setText("RESET");

        jButton12.setText("SUBMIT");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jButton11)
                        .addGap(220, 220, 220)
                        .addComponent(jButton12)))
                .addContainerGap(319, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton11))
                .addGap(0, 104, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add a New Item", jPanel8);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Sup. ID", "Item ID", "Item Name", "Category ID", "Category Name", "Start Quantity", "Available Quantity", "Unit Price (Rs)"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Print");

        jButton2.setText("Search");

        jRadioButton1.setText("Date");

        jRadioButton2.setText("Sup. ID");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Item ID");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 31, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Newly added Items", jPanel9);

        jLabel9.setText("Item Name");

        jLabel25.setText("Item ID");

        jLabel26.setText("Category Name");

        jLabel27.setText("Category ID");

        jLabel28.setText("Quantity");

        jLabel29.setText("Unit Price (Rs)");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Air Conditioning-Inverter Type", "Air Conditioning-Window Type", "Bolts & Nuts", "Brackets", "Brass Pad Lock-Long Shackle", "Brass Pad Lock-Short Shackle", "Door Locks-Full Handle", "Door Locks-On Rose", "Door Locks-Plate Handle", "Hardware Tools", "Nails", "Plumbing" }));

        jLabel4.setText("Net Amount (Rs)");

        jLabel5.setText("Date");

        jLabel131.setText("Supplier ID");

        jTextField117.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField117ActionPerformed(evt);
            }
        });

        jButton9.setText("RESET");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton4.setText("SUBMIT");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(jLabel29)
                            .addComponent(jLabel28)
                            .addComponent(jLabel27)
                            .addComponent(jLabel26)
                            .addComponent(jLabel25)
                            .addComponent(jLabel5)
                            .addComponent(jLabel131))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField11)
                            .addComponent(jTextField17)
                            .addComponent(jTextField18)
                            .addComponent(jTextField20)
                            .addComponent(jTextField8)
                            .addComponent(jComboBox5, 0, 239, Short.MAX_VALUE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField117)
                            .addComponent(jDateChooser3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel131)
                    .addComponent(jTextField117, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton4))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(288, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 89, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add an existing Item", jPanel7);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Category ID", "Category Name", "Available Quantity", "Unit Price (Rs)", "Status"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton5.setText("Search");

        jButton6.setText("Print");

        jButton7.setText("Update");

        jRadioButton4.setText("Item ID");

        jRadioButton5.setText("Category ID");

        jRadioButton6.setText("Status");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField114, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 686, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addGap(28, 28, 28))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField114, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 346, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(68, 68, 68))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(58, Short.MAX_VALUE)))
        );

        jTabbedPane2.addTab("View Inventory", jPanel1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("INVENTORY DETAILS");
        setBackground(new java.awt.Color(210, 210, 210));

        backButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        addanewitem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Item ID");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Item Name");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Category ID");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Category Name");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Quantity");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Unit Price (Rs)");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Net Amount (Rs)");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Date");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Supplier ID");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("Supplier Name");

        itemIDfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemIDfieldActionPerformed(evt);
            }
        });

        itemnameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemnameFieldActionPerformed(evt);
            }
        });

        categoryIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryIDFieldActionPerformed(evt);
            }
        });

        quantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityFieldActionPerformed(evt);
            }
        });

        unitpriceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitpriceFieldActionPerformed(evt);
            }
        });

        netamountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netamountFieldActionPerformed(evt);
            }
        });

        supplierIDCombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        supplierIDCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S100", "S101", "S102" }));
        supplierIDCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierIDComboActionPerformed(evt);
            }
        });

        suppliernameCombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        suppliernameCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ABC Perera", "DEF Perera", "GHI Perera" }));
        suppliernameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliernameComboActionPerformed(evt);
            }
        });

        resetButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        SubmitButtonadd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SubmitButtonadd.setText("Submit");
        SubmitButtonadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonaddActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel47.setText("Inventory Id");

        jLabel50.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\inventory.jpg")); // NOI18N
        jLabel50.setText("jLabel50");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(resetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SubmitButtonadd))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itemIDfield)
                            .addComponent(itemnameField)
                            .addComponent(categoryIDField)
                            .addComponent(quantityField)
                            .addComponent(unitpriceField)
                            .addComponent(netamountField)
                            .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(supplierIDCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(suppliernameCombo, 0, 238, Short.MAX_VALUE)
                            .addComponent(categoryNameTextField))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addGap(18, 18, 18)
                        .addComponent(inventoryIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(itemIDfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47)
                    .addComponent(inventoryIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(itemnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(categoryIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(categoryNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(unitpriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(netamountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(supplierIDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(suppliernameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetButton)
                            .addComponent(SubmitButtonadd)))
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        addanewitem.addTab("Add a new Item", jPanel2);

        jLabel37.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel37.setText("Item ID");

        jLabel38.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel38.setText("Item Name");

        jLabel39.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel39.setText("Category ID");

        jLabel40.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel40.setText("Category Name");

        jLabel41.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel41.setText("Quantity");

        jLabel42.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel42.setText("Unit Price (Rs)");

        jLabel43.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel43.setText("Net Amount (Rs)");

        jLabel44.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel44.setText("Date");

        jLabel45.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel45.setText("Supplier ID");

        jLabel46.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel46.setText("Supplier Name");

        quantityField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityField2ActionPerformed(evt);
            }
        });

        unitpriceField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitpriceField2ActionPerformed(evt);
            }
        });

        netamountField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netamountField2ActionPerformed(evt);
            }
        });

        supplierIDCombo2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        supplierIDCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S100", "S101", "S102" }));
        supplierIDCombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierIDCombo2ActionPerformed(evt);
            }
        });

        suppliernameCombo2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        suppliernameCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ABC Perera", "DEF Perera", "GHI Perera" }));
        suppliernameCombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliernameCombo2ActionPerformed(evt);
            }
        });

        resetButton2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        resetButton2.setText("RESET");

        cancelButton2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cancelButton2.setText("CANCEL");
        cancelButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButton2ActionPerformed(evt);
            }
        });

        categoryIdCombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        categoryIdCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        categoryIdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryIdComboActionPerformed(evt);
            }
        });

        categoryNameCombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        categoryNameCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        categoryNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryNameComboActionPerformed(evt);
            }
        });

        itemid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemidActionPerformed(evt);
            }
        });

        itemname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemnameActionPerformed(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel48.setText("Inventory Id");

        jLabel51.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\inventory.jpg")); // NOI18N
        jLabel51.setText("jLabel50");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(resetButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton2))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel38)
                            .addComponent(jLabel39)
                            .addComponent(jLabel40)
                            .addComponent(jLabel41)
                            .addComponent(jLabel42)
                            .addComponent(jLabel43)
                            .addComponent(jLabel44)
                            .addComponent(jLabel45)
                            .addComponent(jLabel46))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quantityField2)
                            .addComponent(unitpriceField2)
                            .addComponent(netamountField2)
                            .addComponent(date2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(supplierIDCombo2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(suppliernameCombo2, 0, 238, Short.MAX_VALUE)
                            .addComponent(categoryIdCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(categoryNameCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemname)
                            .addComponent(itemid))))
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel48)
                        .addGap(18, 18, 18)
                        .addComponent(inventoryIdField1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel48)
                        .addComponent(inventoryIdField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel37)
                        .addComponent(itemid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel38)
                            .addComponent(itemname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel39)
                            .addComponent(categoryIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(categoryNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41)
                            .addComponent(quantityField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(unitpriceField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43)
                            .addComponent(netamountField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44)
                            .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(supplierIDCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(suppliernameCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetButton2)
                            .addComponent(cancelButton2)))
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1104, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel10Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(56, Short.MAX_VALUE)))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        addanewitem.addTab("Add a new Item in exisiting category", jPanel10);

        inventorytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Item ID", "Supplier Name", "Category Id", "Category Name", "Unit Price", "Available Quantity", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(inventorytable);
        if (inventorytable.getColumnModel().getColumnCount() > 0) {
            inventorytable.getColumnModel().getColumn(1).setResizable(false);
            inventorytable.getColumnModel().getColumn(2).setResizable(false);
        }

        searchRadiobutton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchRadiobutton.setText("Search");
        searchRadiobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchRadiobuttonActionPerformed(evt);
            }
        });

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        SupIDRadiobutton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SupIDRadiobutton.setText("Status");
        SupIDRadiobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupIDRadiobuttonActionPerformed(evt);
            }
        });

        itemIDRadiobutton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        itemIDRadiobutton.setText("Item ID");
        itemIDRadiobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemIDRadiobuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(itemIDRadiobutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SupIDRadiobutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchRadiobutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1104, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchRadiobutton)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SupIDRadiobutton)
                    .addComponent(itemIDRadiobutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        addanewitem.addTab("View Inventory", jPanel5);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setText("Item ID");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel18.setText("Item Name");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setText("Category ID");

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel30.setText("Category Name");

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel31.setText("Quantity");

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel32.setText("Unit Price (Rs)");

        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel33.setText("Net Amount (Rs)");

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel34.setText("Date");

        jLabel35.setText("Supplier ID");

        jLabel36.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel36.setText("Supplier Name");

        quantityField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityField1ActionPerformed(evt);
            }
        });

        unitpriceField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitpriceField1ActionPerformed(evt);
            }
        });

        netamountField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netamountField1ActionPerformed(evt);
            }
        });

        supplierIDCombo1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        supplierIDCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S100", "S101", "S102" }));
        supplierIDCombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierIDCombo1ActionPerformed(evt);
            }
        });

        suppliernameCombo1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        suppliernameCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ABC Perera", "DEF Perera", "GHI Perera" }));
        suppliernameCombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliernameCombo1ActionPerformed(evt);
            }
        });

        resetButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        resetButton1.setText("RESET");

        SubmitButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        updateItemIdCombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        updateItemIdCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        updateItemIdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateItemIdComboActionPerformed(evt);
            }
        });

        updateItemNameCombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        updateItemNameCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        updateItemNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateItemNameComboActionPerformed(evt);
            }
        });

        updateCateogryIdCombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        updateCateogryIdCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        updateCateogryIdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCateogryIdComboActionPerformed(evt);
            }
        });

        updateCategoryNameCombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        updateCategoryNameCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        updateCategoryNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCategoryNameComboActionPerformed(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel49.setText("Inventory Id");

        jLabel52.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\inventory.jpg")); // NOI18N
        jLabel52.setText("jLabel50");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(resetButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SubmitButton))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32)
                            .addComponent(jLabel33)
                            .addComponent(jLabel34)
                            .addComponent(jLabel35)
                            .addComponent(jLabel36))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quantityField1)
                            .addComponent(unitpriceField1)
                            .addComponent(netamountField1)
                            .addComponent(date1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(supplierIDCombo1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(suppliernameCombo1, 0, 238, Short.MAX_VALUE)
                            .addComponent(updateItemIdCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateItemNameCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateCateogryIdCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateCategoryNameCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(43, 43, 43)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel49)
                        .addGap(18, 18, 18)
                        .addComponent(inventoryIdField2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel49)
                        .addComponent(inventoryIdField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(updateItemIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(updateItemNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(updateCateogryIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(updateCategoryNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(quantityField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(unitpriceField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(netamountField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(supplierIDCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(suppliernameCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetButton1)
                            .addComponent(SubmitButton)))
                    .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        addanewitem.addTab("Updating Inventory", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addanewitem)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(backButton))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addanewitem, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        homepage h = new homepage();
        h.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jTextField116ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField116ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField116ActionPerformed

    private void jTextField117ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField117ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField117ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void itemIDfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemIDfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemIDfieldActionPerformed

    private void itemnameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemnameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemnameFieldActionPerformed

    private void categoryIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryIDFieldActionPerformed

    private void unitpriceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitpriceFieldActionPerformed
        CalculateTotalPriceAddNew();   // TODO add your handling code here:
    }//GEN-LAST:event_unitpriceFieldActionPerformed

    private void supplierIDComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierIDComboActionPerformed

        getSupplierNameBySupplierId(1);        // TODO add your handling code here:
    }//GEN-LAST:event_supplierIDComboActionPerformed

    private void unitpriceField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitpriceField1ActionPerformed
        CalculateTotalPriceUpdateInventory();        // TODO add your handling code here:
    }//GEN-LAST:event_unitpriceField1ActionPerformed

    private void supplierIDCombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierIDCombo1ActionPerformed
        // TODO add your handling code here:
        getSupplierNameBySupplierId(3);
    }//GEN-LAST:event_supplierIDCombo1ActionPerformed

    private void searchRadiobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchRadiobuttonActionPerformed
        String SearchId = searchField.getText();
        if (itemIDRadiobutton.isSelected() == true) {

            SearchDao empDetailSearchDao = new SearchDao();

            List<List<String>> res = empDetailSearchDao.InventorySearchByItemId(SearchId);
            addRowToJTable(res);

        }
        if (SupIDRadiobutton.isSelected() == true) {
            SearchDao empDetailSearchDao = new SearchDao();

            List<List<String>> res = empDetailSearchDao.InventorySearchBystatus(SearchId);
            addRowToJTable(res);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_searchRadiobuttonActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void unitpriceField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitpriceField2ActionPerformed
        CalculateTotalPriceAddExisiting();
        // TODO add your handling code here:
    }//GEN-LAST:event_unitpriceField2ActionPerformed

    private void supplierIDCombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierIDCombo2ActionPerformed
        // TODO add your handling code here:
        getSupplierNameBySupplierId(2);
    }//GEN-LAST:event_supplierIDCombo2ActionPerformed

    private void categoryIdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryIdComboActionPerformed

        getCategoryNameByCategoryId(1);       // TODO add your handling code here:
    }//GEN-LAST:event_categoryIdComboActionPerformed

    private void updateCateogryIdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCateogryIdComboActionPerformed
        // TODO add your handling code here:
        getCategoryNameByCategoryId(2);
    }//GEN-LAST:event_updateCateogryIdComboActionPerformed

    private void updateCategoryNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCategoryNameComboActionPerformed
        getCategoryIdByCategoryName(2);
        // TODO add your handling code here:
    }//GEN-LAST:event_updateCategoryNameComboActionPerformed

    private void updateItemIdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateItemIdComboActionPerformed
        getItemNameByItemId(2);
        // TODO add your handling code here:
    }//GEN-LAST:event_updateItemIdComboActionPerformed

    private void updateItemNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateItemNameComboActionPerformed

        getItemIdByItemName(2);       // TODO add your handling code here:
    }//GEN-LAST:event_updateItemNameComboActionPerformed

    private void categoryNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryNameComboActionPerformed
        getCategoryIdByCategoryName(1);
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryNameComboActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        UpdateInventory();
        // TODO add your handling code here:
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void suppliernameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliernameComboActionPerformed
        getSupplierIdBySupplierName(1);       // TODO add your handling code here:
    }//GEN-LAST:event_suppliernameComboActionPerformed

    private void suppliernameCombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliernameCombo2ActionPerformed
        // TODO add your handling code here:
        getSupplierIdBySupplierName(2);
    }//GEN-LAST:event_suppliernameCombo2ActionPerformed

    private void suppliernameCombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliernameCombo1ActionPerformed
        // TODO add your handling code here:
        getSupplierIdBySupplierName(3);
    }//GEN-LAST:event_suppliernameCombo1ActionPerformed

    private void itemnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemnameActionPerformed

    private void itemidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemidActionPerformed

    private void quantityField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityField2ActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_quantityField2ActionPerformed

    private void netamountField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netamountField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_netamountField2ActionPerformed

    private void quantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityFieldActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_quantityFieldActionPerformed

    private void quantityField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityField1ActionPerformed
        netamountField2.setText(null);        // TODO add your handling code here:
    }//GEN-LAST:event_quantityField1ActionPerformed

    private void netamountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netamountFieldActionPerformed
        getNetAmount(1, 2);

        // TODO add your handling code here:
    }//GEN-LAST:event_netamountFieldActionPerformed

    private void netamountField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netamountField1ActionPerformed
        double unitPrice = Double.parseDouble(unitpriceField1.getText());
        int quantity = Integer.parseInt(quantityField1.getText());

        netamountField1.setText(getNetAmount(unitPrice, quantity));// TODO add your handling code here:
    }//GEN-LAST:event_netamountField1ActionPerformed

    private void SubmitButtonaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonaddActionPerformed
        // TODO add your handling code here:
        SubmitInventoryAdd();

    }//GEN-LAST:event_SubmitButtonaddActionPerformed

    private void cancelButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButton2ActionPerformed
        SubmitInventoryAddExisitingCategory();
// TODO add your handling code here:
    }//GEN-LAST:event_cancelButton2ActionPerformed

    private void itemIDRadiobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemIDRadiobuttonActionPerformed
        selectedRadio = "itemId";

        // TODO add your handling code here:
    }//GEN-LAST:event_itemIDRadiobuttonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        ClearFields();
        loadInventoryDetails();
        generateId();
// TODO add your handling code here:
    }//GEN-LAST:event_resetButtonActionPerformed

    private void SupIDRadiobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupIDRadiobuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SupIDRadiobuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inventorydetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inventorydetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inventorydetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inventorydetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inventorydetails().setVisible(true);
            }
        });

    }

    public void getInventoryDetails() {

        inventory = inventoryDetails.getInventoryDetails();
        List<String> supIdList = inventory.supplierDetails.supplierIds;

        // Add inventory item, category doenot exist
        DefaultComboBoxModel supplierIdModel = new DefaultComboBoxModel(supIdList.toArray());
        supplierIDCombo.setModel(supplierIdModel);
        DefaultComboBoxModel SupplierNameModel = new DefaultComboBoxModel(inventory.supplierDetails.supplierNames.toArray());
        suppliernameCombo.setModel(SupplierNameModel);

        // Add inventory item existing category
        DefaultComboBoxModel supplierIdCategoryExist = new DefaultComboBoxModel(supIdList.toArray());
        supplierIDCombo2.setModel(supplierIdCategoryExist);
        DefaultComboBoxModel SupplierNameCategoryExist = new DefaultComboBoxModel(inventory.supplierDetails.supplierNames.toArray());
        suppliernameCombo2.setModel(SupplierNameCategoryExist);

        DefaultComboBoxModel categoryId = new DefaultComboBoxModel(inventory.categoryDetails.categoryIds.toArray());
        categoryIdCombo.setModel(categoryId);
        DefaultComboBoxModel categoryName = new DefaultComboBoxModel(inventory.categoryDetails.categoryNames.toArray());
        categoryNameCombo.setModel(categoryName);

        DefaultComboBoxModel itemIdCategoryExist = new DefaultComboBoxModel(inventory.itemDetails.itemIds.toArray());
        //itemIdCombo.setModel(itemIdCategoryExist);
        DefaultComboBoxModel itemNameCategoryExist = new DefaultComboBoxModel(inventory.itemDetails.itemNames.toArray());
        //itemNameCombo.setModel(itemNameCategoryExist);

        // update Inventory item
        DefaultComboBoxModel supplierIdInUpdate = new DefaultComboBoxModel(supIdList.toArray());
        supplierIDCombo1.setModel(supplierIdInUpdate);
        DefaultComboBoxModel SupplierNameInUpdate = new DefaultComboBoxModel(inventory.supplierDetails.supplierNames.toArray());
        suppliernameCombo1.setModel(SupplierNameInUpdate);

        DefaultComboBoxModel categoryIdInUpdate = new DefaultComboBoxModel(inventory.categoryDetails.categoryIds.toArray());
        updateCateogryIdCombo.setModel(categoryIdInUpdate);
        DefaultComboBoxModel categoryNameInUpdate = new DefaultComboBoxModel(inventory.categoryDetails.categoryNames.toArray());
        updateCategoryNameCombo.setModel(categoryNameInUpdate);

        DefaultComboBoxModel itemIdInUpdate = new DefaultComboBoxModel(inventory.itemDetails.itemIds.toArray());
        updateItemIdCombo.setModel(itemIdInUpdate);
        DefaultComboBoxModel itemNameInUpdate = new DefaultComboBoxModel(inventory.itemDetails.itemNames.toArray());
        updateItemNameCombo.setModel(itemNameInUpdate);
    }

    public void getItemNameByItemId(int val) {
        if (val == 1) {
            //String itemId = (String) itemIdCombo.getSelectedItem();
            //String nameToBeSet = FindItemNameById(itemId);
            //itemNameCombo.setSelectedItem(nameToBeSet);

        }
        if (val == 2) {
            String itemId = (String) updateItemIdCombo.getSelectedItem();
            String nameToBeSet = FindItemNameById(itemId);
            updateItemNameCombo.setSelectedItem(nameToBeSet);

        }

    }

    public void getItemIdByItemName(int val) {
        if (val == 1) {
            //String itemName = (String) itemNameCombo.getSelectedItem();
            //String idToBeSet = FindItemIdByName(itemName);
            //itemIdCombo.setSelectedItem(idToBeSet);

        }
        if (val == 2) {
            String itemName = (String) updateItemNameCombo.getSelectedItem();
            String idToBeSet = FindItemIdByName(itemName);
            updateItemIdCombo.setSelectedItem(idToBeSet);

        }

    }

    public void getCategoryNameByCategoryId(int val) {
        if (val == 1) {
            String categoryId = (String) categoryIdCombo.getSelectedItem();
            String nameToBeSet = FindCategoryNameById(categoryId);
            categoryNameCombo.setSelectedItem(nameToBeSet);

        }
        if (val == 2) {
            String categoryId = (String) updateCateogryIdCombo.getSelectedItem();
            String nameToBeSet = FindCategoryNameById(categoryId);
            updateCategoryNameCombo.setSelectedItem(nameToBeSet);

        }

    }

    public void getCategoryIdByCategoryName(int val) {
        if (val == 1) {
            String categoryName = (String) categoryNameCombo.getSelectedItem();
            String idToBeSet = FindCategoryIdByName(categoryName);
            categoryIdCombo.setSelectedItem(idToBeSet);

        }
        if (val == 2) {
            String categoryName = (String) updateCategoryNameCombo.getSelectedItem();
            String idToBeSet = FindCategoryIdByName(categoryName);
            updateCateogryIdCombo.setSelectedItem(idToBeSet);

        }

    }

    public void getSupplierNameBySupplierId(int val) {
        if (val == 1) {
            String supplierId = (String) supplierIDCombo.getSelectedItem();
            String nameToBeSet = FindSupplierNameById(supplierId);
            suppliernameCombo.setSelectedItem(nameToBeSet);

        }
        if (val == 2) {
            String supplierId = (String) supplierIDCombo2.getSelectedItem();
            String nameToBeSet = FindSupplierNameById(supplierId);
            suppliernameCombo2.setSelectedItem(nameToBeSet);

        }
        if (val == 3) {
            String supplierId = (String) supplierIDCombo1.getSelectedItem();
            String nameToBeSet = FindSupplierNameById(supplierId);
            suppliernameCombo1.setSelectedItem(nameToBeSet);
        }

    }

    public void getSupplierIdBySupplierName(int val) {
        if (val == 1) {
            String supplierName = (String) suppliernameCombo.getSelectedItem();
            String idToBeSet = FindSupplierIdByName(supplierName);
            supplierIDCombo.setSelectedItem(idToBeSet);

        }
        if (val == 2) {
            String supplierName = (String) suppliernameCombo2.getSelectedItem();
            String idToBeSet = FindSupplierIdByName(supplierName);
            supplierIDCombo2.setSelectedItem(idToBeSet);

        }
        if (val == 3) {
            String supplierName = (String) suppliernameCombo1.getSelectedItem();
            String idToBeSet = FindSupplierIdByName(supplierName);
            supplierIDCombo1.setSelectedItem(idToBeSet);
        }

    }

    public String FindSupplierNameById(String searchId) {
        String Name = "";
        for (int i = 0; i < inventory.supplierDetails.supplierDetails.size(); i++) {
            List a = (List) inventory.supplierDetails.supplierDetails.get(i);
            String id = a.get(0).toString();
            if (searchId.equals(id)) {
                Name = a.get(1).toString();
            }
        }
        return Name;
    }

    public String FindSupplierIdByName(String searchName) {
        String Id = "";
        for (int i = 0; i < inventory.supplierDetails.supplierDetails.size(); i++) {
            List a = (List) inventory.supplierDetails.supplierDetails.get(i);
            String name = a.get(1).toString();
            if (searchName.equals(name)) {
                Id = a.get(0).toString();
            }
        }
        return Id;
    }

    public String FindCategoryNameById(String searchId) {
        String Name = "";
        for (int i = 0; i < inventory.categoryDetails.categoryDetails.size(); i++) {
            List a = (List) inventory.categoryDetails.categoryDetails.get(i);
            String id = a.get(0).toString();
            if (searchId.equals(id)) {
                Name = a.get(1).toString();
            }
        }
        return Name;
    }

    public String FindCategoryIdByName(String searchName) {
        String Id = "";
        for (int i = 0; i < inventory.categoryDetails.categoryDetails.size(); i++) {
            List a = (List) inventory.categoryDetails.categoryDetails.get(i);
            String name = a.get(1).toString();
            if (searchName.equals(name)) {
                Id = a.get(0).toString();
            }
        }
        return Id;
    }

    public String FindItemNameById(String searchId) {
        String Name = "";
        for (int i = 0; i < inventory.itemDetails.itemDetails.size(); i++) {
            List a = (List) inventory.itemDetails.itemDetails.get(i);
            String id = a.get(0).toString();
            if (searchId.equals(id)) {
                Name = a.get(1).toString();
            }
        }
        return Name;
    }

    public String FindItemIdByName(String searchName) {
        String Id = "";
        for (int i = 0; i < inventory.itemDetails.itemDetails.size(); i++) {
            List a = (List) inventory.itemDetails.itemDetails.get(i);
            String name = a.get(1).toString();
            if (searchName.equals(name)) {
                Id = a.get(0).toString();
            }
        }
        return Id;
    }

    public void generateId() {

        String item_id = inventoryDetails.nextItemId();
        String category_id = inventoryDetails.nextCategoryId();
        String supply_id = inventoryDetails.nextInventoryId();
        itemIDfield.setText(item_id);
        categoryIDField.setText(category_id);
        itemid.setText(item_id);
        inventoryIdField.setText(supply_id);
        inventoryIdField1.setText(supply_id);
        inventoryIdField2.setText(supply_id);

    }

    public String getNetAmount(double unitPrice, int quantity) {
        String netAmount = Double.toString(unitPrice * quantity);
        return netAmount;

    }

    public void SubmitInventoryAdd() {
        boolean validatednull = true;
        boolean validated = true;

        if (itemnameField.getText().equals("") || categoryNameTextField.getText().equals("") || quantityField.getText().equals("")
                || unitpriceField.getText().equals("") || date.getDate() == null || netamountField.getText().equals("")) {
            validatednull = false;
            JOptionPane.showMessageDialog(this, "Please fill up all the Fields ");
        }

        if (validatednull == true) {
            Date currentdate = new Date();
//            if ((netamountField.getText().matches("[0-9]+") == false)) {
//                JOptionPane.showMessageDialog(this, "Total Payment cannot be included letters ");
//                validated = false;
//            }

            if ((unitpriceField.getText().matches("[0-9]+") == false)) {
                JOptionPane.showMessageDialog(this, "Unit price cannot be included letters ");
                validated = false;
            }

            if ((quantityField.getText().matches("[0-9]+") == false)) {
                JOptionPane.showMessageDialog(this, "Quantity cannot be included letters ");
                validated = false;
            }

            if (!currentdate.after(date.getDate())) {
                JOptionPane.showMessageDialog(this, "Inventory Added date is not valid");
                validated = false;
            }

            if (netamountField.getText().length() > 15) {
                validated = false;
                JOptionPane.showMessageDialog(this, "Maximum length exceeds, allows less than 15 characters");
            }
            if (quantityField.getText().length() > 6) {
                validated = false;
                JOptionPane.showMessageDialog(this, "Quantity Maximum length exceeds");
            }
            if (-1 != quantityField.getText().indexOf(" ")) {
                JOptionPane.showMessageDialog(this, "Quantity cannot have spaces");
                validated = false;
            }
            if (-1 != unitpriceField.getText().indexOf(" ")) {
                JOptionPane.showMessageDialog(this, "Unit price cannot have spaces");
                validated = false;
            }

            if (unitpriceField.getText().length() > 6) {
                validated = false;
                JOptionPane.showMessageDialog(this, " Unit priceMaximum length exceeds");
            }

            if (validated == true) {
                String itemId = itemIDfield.getText();

                String itemName = itemnameField.getText();
                String categoryId = categoryIDField.getText();
                String categoryName = categoryNameTextField.getText();
                int quantity = Integer.parseInt(quantityField.getText());
                Double unitPrice = Double.parseDouble(unitpriceField.getText());
                Date itemAddedDate = date.getDate();
                String supplierId = (String) supplierIDCombo.getSelectedItem();
                String supplierName = (String) suppliernameCombo.getSelectedItem();
                String inventoryId = inventoryIdField.getText();
                String netAmount = netamountField.getText();

                InventoryAddViewDTO inventory_item = new InventoryAddViewDTO();
                inventory_item.setItemId(itemId);
                inventory_item.setItemName(itemName);
                inventory_item.setCategoryId(categoryId);
                inventory_item.setQuantity(quantity);
                inventory_item.setUnitPrice(unitPrice);
                inventory_item.setSupplierId(supplierId);
                inventory_item.setSupplierName(supplierName);
                inventory_item.setNetAmount(netAmount);
                inventory_item.setSupplyId(inventoryId);
                inventory_item.setCategoryName(categoryName);
                inventory_item.setNewInventoryDate(itemAddedDate);

                try {
                    boolean res = inventoryDetails.addNewInventory(inventory_item, 1);
                    if (res == true) {
                        JOptionPane.showMessageDialog(this, "Inventory added sucessfully");
                        ClearFields();
                        loadInventoryDetails();
                        generateId();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error occur in adding Inventory");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Employeedetails.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(Employeedetails.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }

    }

    public void SubmitInventoryAddExisitingCategory() {

        boolean validatednull = true;
        boolean validated = true;

        if (itemname.getText().equals("") || categoryNameTextField.getText().equals("") || quantityField2.getText().equals("")
                || unitpriceField2.getText().equals("") || date2.getDate() == null || netamountField2.getText().equals("")) {
            validatednull = false;
            JOptionPane.showMessageDialog(this, "Please fill up all the Fields ");
        }

        if (validatednull == true) {
            Date currentdate = new Date();
//            if ((netamountField2.getText().matches("[0-9]+") == false)) {
//                JOptionPane.showMessageDialog(this, "Total Payment cannot be included letters ");
//                validated = false;
//            }

            if ((unitpriceField2.getText().matches("[0-9]+") == false)) {
                JOptionPane.showMessageDialog(this, "Unit price cannot be included letters ");
                validated = false;
            }

            if ((quantityField2.getText().matches("[0-9]+") == false)) {
                JOptionPane.showMessageDialog(this, "Quantity cannot be included letters ");
                validated = false;
            }

            if (!currentdate.after(date2.getDate())) {
                JOptionPane.showMessageDialog(this, "Inventory Added date is not valid");
                validated = false;
            }

            if (netamountField2.getText().length() > 15) {
                validated = false;
                JOptionPane.showMessageDialog(this, "Maximum length exceeds, allows less than 15 characters");
            }
            if (quantityField2.getText().length() > 6) {
                validated = false;
                JOptionPane.showMessageDialog(this, "Quantity Maximum length exceeds");
            }
            if (-1 != quantityField2.getText().indexOf(" ")) {
                JOptionPane.showMessageDialog(this, "Quantity cannot have spaces");
                validated = false;
            }
            if (-1 != unitpriceField2.getText().indexOf(" ")) {
                JOptionPane.showMessageDialog(this, "Unit price cannot have spaces");
                validated = false;
            }

            if (unitpriceField2.getText().length() > 6) {
                validated = false;
                JOptionPane.showMessageDialog(this, " Unit priceMaximum length exceeds");
            }

            if (validated == true) {
                String itemId = itemid.getText();

                String itemName = itemname.getText();
                String categoryId = (String) categoryIdCombo.getSelectedItem();
                String categoryName = (String) categoryNameCombo.getSelectedItem();
                int quantity = Integer.parseInt(quantityField2.getText());
                Double unitPrice = Double.parseDouble(unitpriceField2.getText());
                Date itemAddedDate = date2.getDate();
                String supplierId = (String) supplierIDCombo2.getSelectedItem();
                String supplierName = (String) suppliernameCombo2.getSelectedItem();
                String inventoryId = inventoryIdField1.getText();
                String netAmount = netamountField2.getText();

                InventoryAddViewDTO inventory_item = new InventoryAddViewDTO();
                inventory_item.setItemId(itemId);
                inventory_item.setItemName(itemName);
                inventory_item.setCategoryId(categoryId);
                inventory_item.setQuantity(quantity);
                inventory_item.setUnitPrice(unitPrice);
                inventory_item.setSupplierId(supplierId);
                inventory_item.setSupplierName(supplierName);
                inventory_item.setNetAmount(netAmount);
                inventory_item.setSupplyId(inventoryId);
                inventory_item.setCategoryId(categoryId);
                inventory_item.setNewInventoryDate(itemAddedDate);

                try {
                    boolean res = inventoryDetails.addNewInventory(inventory_item, 2);
                    if (res == true) {
                        JOptionPane.showMessageDialog(this, "Inventory added sucessfully");
                        ClearFields();
                        loadInventoryDetails();
                        generateId();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error occur in adding Inventory");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Employeedetails.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(Employeedetails.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }

    public void UpdateInventory() {
        boolean validatednull = true;
        boolean validated = true;

        if (quantityField1.getText().equals("")
                || unitpriceField1.getText().equals("") || date1.getDate() == null || netamountField1.getText().equals("")) {
            validatednull = false;
            JOptionPane.showMessageDialog(this, "Please fill up all the Fields ");
        }

        if (validatednull == true) {

            Date currentdate = new Date();

            if ((unitpriceField1.getText().matches("[0-9]+") == false)) {
                JOptionPane.showMessageDialog(this, "Unit price cannot be included letters ");
                validated = false;
            }

            if ((quantityField1.getText().matches("[0-9]+") == false)) {
                JOptionPane.showMessageDialog(this, "Quantity cannot be included letters ");
                validated = false;
            }

            if (!currentdate.after(date1.getDate())) {
                JOptionPane.showMessageDialog(this, "Inventory Added date is not valid");
                validated = false;
            }

            if (netamountField1.getText().length() > 15) {
                validated = false;
                JOptionPane.showMessageDialog(this, "Maximum length exceeds, allows less than 15 characters");
            }
            if (quantityField1.getText().length() > 6) {
                validated = false;
                JOptionPane.showMessageDialog(this, "Quantity Maximum length exceeds");
            }
            if (-1 != quantityField1.getText().indexOf(" ")) {
                JOptionPane.showMessageDialog(this, "Quantity cannot have spaces");
                validated = false;
            }
            if (-1 != unitpriceField1.getText().indexOf(" ")) {
                JOptionPane.showMessageDialog(this, "Unit price cannot have spaces");
                validated = false;
            }

            if (unitpriceField1.getText().length() > 6) {
                validated = false;
                JOptionPane.showMessageDialog(this, " Unit priceMaximum length exceeds");
            }

            if (validated == true) {
                String itemName = (String) updateItemNameCombo.getSelectedItem();
                String categoryId = (String) updateCateogryIdCombo.getSelectedItem();
                String categoryName = (String) updateCategoryNameCombo.getSelectedItem();
                int quantity = Integer.parseInt(quantityField1.getText());
                Double unitPrice = Double.parseDouble(unitpriceField1.getText());
                Date itemAddedDate = date1.getDate();
                String supplierId = (String) supplierIDCombo1.getSelectedItem();
                String supplierName = (String) suppliernameCombo1.getSelectedItem();
                String inventoryId = inventoryIdField2.getText();
                String netAmount = netamountField1.getText();

                String itemId = (String) updateItemIdCombo.getSelectedItem();

                InventoryAddViewDTO inventory_item = new InventoryAddViewDTO();
                inventory_item.setItemId(itemId);
                inventory_item.setItemName(itemName);
                inventory_item.setCategoryId(categoryId);
                inventory_item.setQuantity(quantity);
                inventory_item.setUnitPrice(unitPrice);
                inventory_item.setSupplierId(supplierId);
                inventory_item.setSupplierName(supplierName);
                inventory_item.setNetAmount(netAmount);
                inventory_item.setSupplyId(inventoryId);
                inventory_item.setCategoryId(categoryId);
                inventory_item.setNewInventoryDate(itemAddedDate);

                try {
                    boolean res = inventoryDetails.addNewInventory(inventory_item, 3);
                    if (res == true) {
                        JOptionPane.showMessageDialog(this, "Inventory added sucessfully");
                        ClearFields();
                        loadInventoryDetails();
                        generateId();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error occur in adding Inventory");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Employeedetails.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(Employeedetails.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }

    }

    public void loadInventoryDetails() {

        List<List<String>> res = inventoryDetails.ViewInventoryDetails();
        addRowToJTable(res);
    }

    public void addRowToJTable(List res) {
        inventorytable.setShowGrid(true);
        DefaultTableModel model = (DefaultTableModel) inventorytable.getModel();
        model.setRowCount(0);
        Object rowData[] = new Object[8];
        for (Iterator it = res.iterator(); it.hasNext();) {
            List<String> innerList = (List<String>) it.next();
            rowData[0] = innerList.get(0);
            rowData[1] = innerList.get(1);
            rowData[2] = innerList.get(2);
            rowData[3] = innerList.get(3);
            rowData[4] = innerList.get(4);
            rowData[5] = innerList.get(5);
            rowData[6] = innerList.get(6);
            rowData[7] = innerList.get(7);

            model.addRow(rowData);

        }
    }

    public List<List<String>> SearchInventory(String SearchId) {
        List<List<String>> res = new ArrayList<List<String>>();

        if (selectedRadio.equals("itemId")) {

            res = search.InventorySearchByItemId(SearchId);

        }
        return res;
    }

    public void ClearFields() {
        itemIDfield.setText(null);

        itemnameField.setText(null);
        categoryIDField.setText(null);
        categoryNameTextField.setText(null);
        quantityField.setText(null);
        unitpriceField.setText(null);
        date.setDate(null);
        supplierIDCombo.setSelectedItem(1);
        suppliernameCombo.setSelectedItem(1);
        inventoryIdField.setText(null);
    }

    public void MakeFieldsNoteditable() {
        categoryIDField.setEditable(false);
        itemIDfield.setEditable(false);
        inventoryIdField.setEditable(false);

        itemid.setEditable(false);

        inventoryIdField1.setEditable(false);
        inventoryIdField2.setEditable(false);

    }

    public void CalculateTotalPriceAddNew() {
        boolean val = true;
        if (quantityField.getText().equals("") || unitpriceField.getText().equals("")) {
            val = false;
            JOptionPane.showMessageDialog(this, "Please fill the Quantity and unit price field ");

        }

        if ((unitpriceField.getText().matches("[0-9]+") == false)) {
            JOptionPane.showMessageDialog(this, "unitpriceField cannot be included letters ");
            val = false;
        }
        if ((quantityField.getText().matches("[0-9]+") == false)) {
            JOptionPane.showMessageDialog(this, "Quantity cannot be included letters ");
            val = false;
        }

        if (val == true) {
            Double UnitPrice = Double.parseDouble(unitpriceField.getText());
            int Quantity = Integer.parseInt(quantityField.getText());
            Double netAmount = UnitPrice * Quantity;

            netamountField.setText(netAmount.toString());
            netamountField.setEditable(false);
        }

    }

    public void CalculateTotalPriceAddExisiting() {
        boolean val = true;
        if (quantityField2.getText().equals("") || unitpriceField2.getText().equals("")) {
            val = false;
            JOptionPane.showMessageDialog(this, "Please fill the Quantity and unit price field ");

        }

        if ((unitpriceField2.getText().matches("[0-9]+") == false)) {
            JOptionPane.showMessageDialog(this, "unitpriceField cannot be included letters ");
            val = false;
        }
        if ((quantityField2.getText().matches("[0-9]+") == false)) {
            JOptionPane.showMessageDialog(this, "Quantity cannot be included letters ");
            val = false;
        }

        if (val == true) {
            Double UnitPrice = Double.parseDouble(unitpriceField2.getText());
            int Quantity = Integer.parseInt(quantityField2.getText());
            Double netAmount = UnitPrice * Quantity;

            netamountField2.setText(netAmount.toString());
            netamountField2.setEditable(false);
        }

    }

    public void CalculateTotalPriceUpdateInventory() {
        boolean val = true;
        if (quantityField1.getText().equals("") || unitpriceField1.getText().equals("")) {
            val = false;
            JOptionPane.showMessageDialog(this, "Please fill the Quantity and unit price field ");

        }

        if ((unitpriceField1.getText().matches("[0-9]+") == false)) {
            JOptionPane.showMessageDialog(this, "unitpriceField cannot be included letters ");
            val = false;
        }
        if ((quantityField1.getText().matches("[0-9]+") == false)) {
            JOptionPane.showMessageDialog(this, "Quantity cannot be included letters ");
            val = false;
        }

        if (val == true) {
            Double UnitPrice = Double.parseDouble(unitpriceField1.getText());
            int Quantity = Integer.parseInt(quantityField1.getText());
            Double netAmount = UnitPrice * Quantity;

            netamountField1.setText(netAmount.toString());
            netamountField1.setEditable(false);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SubmitButton;
    private javax.swing.JButton SubmitButtonadd;
    private javax.swing.JRadioButton SupIDRadiobutton;
    private javax.swing.JTabbedPane addanewitem;
    private javax.swing.JButton backButton;
    private javax.swing.JButton cancelButton2;
    private javax.swing.JTextField categoryIDField;
    private javax.swing.JComboBox<String> categoryIdCombo;
    private javax.swing.JComboBox<String> categoryNameCombo;
    private javax.swing.JTextField categoryNameTextField;
    private com.toedter.calendar.JDateChooser date;
    private com.toedter.calendar.JDateChooser date1;
    private com.toedter.calendar.JDateChooser date2;
    private javax.swing.JTextField inventoryIdField;
    private javax.swing.JTextField inventoryIdField1;
    private javax.swing.JTextField inventoryIdField2;
    private javax.swing.JTable inventorytable;
    private javax.swing.JRadioButton itemIDRadiobutton;
    private javax.swing.JTextField itemIDfield;
    private javax.swing.JTextField itemid;
    private javax.swing.JTextField itemname;
    private javax.swing.JTextField itemnameField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField116;
    private javax.swing.JTextField jTextField117;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField netamountField;
    private javax.swing.JTextField netamountField1;
    private javax.swing.JTextField netamountField2;
    private javax.swing.JTextField quantityField;
    private javax.swing.JTextField quantityField1;
    private javax.swing.JTextField quantityField2;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton resetButton1;
    private javax.swing.JButton resetButton2;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton searchRadiobutton;
    private javax.swing.JComboBox<String> supplierIDCombo;
    private javax.swing.JComboBox<String> supplierIDCombo1;
    private javax.swing.JComboBox<String> supplierIDCombo2;
    private javax.swing.JComboBox<String> suppliernameCombo;
    private javax.swing.JComboBox<String> suppliernameCombo1;
    private javax.swing.JComboBox<String> suppliernameCombo2;
    private javax.swing.JTextField unitpriceField;
    private javax.swing.JTextField unitpriceField1;
    private javax.swing.JTextField unitpriceField2;
    private javax.swing.JComboBox<String> updateCategoryNameCombo;
    private javax.swing.JComboBox<String> updateCateogryIdCombo;
    private javax.swing.JComboBox<String> updateItemIdCombo;
    private javax.swing.JComboBox<String> updateItemNameCombo;
    // End of variables declaration//GEN-END:variables
}
